name: Build iOS .ipa for KittyWorries

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Проверяем репозиторий
        uses: actions/checkout@v3

      - name: Устанавливаем Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.4'

      - name: Удалить старую папку .ios (если есть)
        run: rm -rf .ios 

      - name: Кэшируем артефакты iOS
        run: flutter precache --ios

      - name: Очистка flutter
        run: flutter clean

      - name: Удалить старые CocoaPods
        run: |
          rm -rf ios/Pods
          rm -rf ios/Podfile.lock
          rm -rf ios/.symlinks   

      - name: Устанавливаем зависимости
        run: flutter pub get

      - name: Обновляет все зависимости
        run: flutter pub upgrade  

      - name: 📄 Показать текущий Podfile
        run: cat ios/Podfile

      - name: Добавляем GoogleService-Info.plist
        run: |
          echo "$GOOGLE_SERVICE_INFO" | base64 --decode > ios/Runner/GoogleService-Info.plist
        env:
          GOOGLE_SERVICE_INFO: ${{ secrets.GOOGLE_SERVICE_INFO }}

      - name: Запускаем pod install
        run: |
          cd ios
          pod install

      - name: Install CocoaPods dependencies
        working-directory: ios
        run: |
          pod repo update
          pod install --verbose --no-repo-update    

      - name: Созадем iOS (verbose)
        run: |
          flutter build ios --release --no-codesign -v > flutter_ios_build.log || true

      - name: Проверяем PluginRegistrant content
        run: |
          cat ios/Runner/GeneratedPluginRegistrant.swift || echo "❌ Файл не найден"

      - name: Диагностика после сборки
        run: |
          ls -la ios
          cat ios/Podfile.lock || echo "❌ Podfile.lock не найден"
          cat ios/Flutter/Generated.xcconfig || echo "❌ Generated.xcconfig не найден"
          grep awesome_notifications ios/Flutter/GeneratedPluginRegistrant.* || echo "❌ awesome_notifications не зарегистрирован"
            
      - name: Upload build log
        uses: actions/upload-artifact@v4
        with:
          name: flutter-ios-build-log
          path: flutter_ios_build.log

      - name: Check if build succeeded
        if: success()
        run: echo "✅ Flutter iOS build OK"
      
      - name: Run pod install
        if: success()
        run: |
          cd ios
          pod install

      - name: Decode and install certificate
        run: |
          echo "$IOS_CERTIFICATE_P12" | base64 --decode > certificate.p12
          security create-keychain -p "pass" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "pass" build.keychain
          security import certificate.p12 -k build.keychain -P "$IOS_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "pass" build.keychain
        env:
          IOS_CERTIFICATE_P12: ${{ secrets.IOS_CERTIFICATE_P12 }}
          IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}

      - name: Decode and install provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$IOS_PROVISIONING_PROFILE" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision
        env:
          IOS_PROVISIONING_PROFILE: ${{ secrets.IOS_PROVISIONING_PROFILE }}

      - name: Archive with Xcode
        run: |
          xcodebuild -workspace ios/Runner.xcworkspace \
                     -scheme Runner \
                     -configuration Release \
                     -archivePath build/ios/archive.xcarchive \
                     archive

      - name: Export signed .ipa
        run: |
          xcodebuild -exportArchive \
                     -archivePath build/ios/archive.xcarchive \
                     -exportOptionsPlist ios/ExportOptions.plist \
                     -exportPath build/ios/ipa

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: build/ios/ipa


